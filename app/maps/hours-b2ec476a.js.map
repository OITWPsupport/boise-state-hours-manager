{"version":3,"sources":["app.js","controllers/MainCtrl.js","directives/allPageDirective.js","directives/frontPageDirective.js","directives/loadingDirective.js","directives/locationPageDirective.js","directives/todayHoursDirective.js","directives/weekHoursDirective.js","services/apiService.js","services/dateService.js","services/hoursService.js","services/locationService.js"],"names":[],"mappings":"CAAA,WACA,YAEA,SAAA,OAAA,eACA,SAAA,cAAA,kCACA,OAAA,YAAA,WACA,MAAA,UAAA,GACA,MAAA,GACA,SAAA,OAAA,EAAA,MAAA,OACA,QAEA,EAAA,UAJA,UAOA,OAAA,YAAA,WACA,MAAA,UAAA,GACA,MAAA,IAAA,OAAA,SAAA,EAAA,SAAA,EAAA,OACA,EAAA,MAAA,OAAA,SAAA,KADA,UAIA,OAAA,aAAA,WACA,MAAA,UAAA,GACA,MAAA,IAAA,OAAA,SAAA,EAAA,KACA,EAAA,OAAA,SACA,EAAA,IAAA,OAAA,SAFA,aCtBA,WACA,YAEA,SAAA,OAAA,YACA,WAAA,YAAA,SAAA,WAAA,kBAAA,aACA,SAAA,EAAA,EAAA,EAAA,GAaA,QAAA,KACA,EAAA,WACA,SAAA,MAAA,SAAA,KAAA,QAAA,SAAA,KAAA,OAAA,UACA,KAEA,EAAA,KAAA,EAAA,SAAA,QACA,EAAA,UAAA,EAAA,gBAAA,EAAA,aAEA,GApBA,GAAA,EACA,GAAA,aAEA,EAAA,KAAA,SAAA,GACA,EAAA,QAAA,SAAA,GACA,EAAA,SAAA,EAAA,SACA,SAAA,EAAA,QACA,EAAA,MAAA,EAAA,OAEA,WCfA,WACA,YACA,SAAA,OAAA,YACA,UAAA,WAAA,cACA,SAAA,GACA,OACA,SAAA,IACA,YAAA,EAAA,qCCPA,WACA,YACA,SAAA,OAAA,YACA,UAAA,aAAA,cACA,SAAA,GACA,OACA,SAAA,IACA,YAAA,EAAA,sCCPA,WACA,YAEA,SAAA,OAAA,YACA,UAAA,UAAA,WACA,OACA,SAAA,IACA,UACA,6CACA,8BACA,8BACA,8BACA,UACA,KAAA,IACA,OACA,QAAA,WCfA,WACA,YACA,SAAA,OAAA,YACA,UAAA,gBAAA,cACA,SAAA,GACA,OACA,SAAA,IACA,YAAA,EAAA,qCACA,KAAA,SAAA,GACA,EAAA,SAAA,EAEA,EAAA,OAAA,YAAA,SAAA,GACA,IACA,EAAA,SAAA,EAAA,mBCbA,WACA,YACA,SAAA,OAAA,YACA,UAAA,cAAA,aAAA,eAAA,cACA,SAAA,EAAA,EAAA,GACA,OACA,SAAA,IACA,OACA,SAAA,KAEA,YAAA,EAAA,gCACA,KAAA,SAAA,GACA,EAAA,SAAA,EACA,EAAA,OAAA,WAAA,SAAA,GACA,GAAA,EAAA,CACA,GAAA,GAAA,SAAA,QAAA,OACA,EAAA,SAAA,QAAA,OAAA,IAAA,EAAA,MACA,GAAA,oBAAA,EAAA,WAAA,EAAA,GACA,KAAA,SAAA,GACA,EAAA,MAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,GAAA,QACA,EAAA,SAAA,EACA,EAAA,sBCrBA,WACA,YACA,SAAA,OAAA,YACA,UAAA,aAAA,aAAA,eAAA,cACA,SAAA,EAAA,EAAA,GACA,OACA,SAAA,IACA,OACA,SAAA,KAEA,YAAA,EAAA,+BACA,KAAA,SAAA,GACA,EAAA,SAAA,EACA,EAAA,OAAA,WAAA,SAAA,GACA,GAAA,SAAA,EAAA,CACA,GAAA,GAAA,SAAA,QAAA,OACA,EAAA,SAAA,QAAA,OAAA,IAAA,EAAA,OACA,GAAA,oBAAA,EAAA,WAAA,EAAA,GACA,KAAA,SAAA,GACA,EAAA,SAAA,MAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,GACA,EAAA,SAAA,EACA,EAAA,sBCrBA,WACA,YACA,SAAA,OAAA,YACA,QAAA,cAAA,aAAA,KAAA,cACA,SAAA,EAAA,EAAA,GACA,KAAA,KAAA,SAAA,GACA,KAAA,OAAA,UAAA,IAGA,KAAA,oBAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,KACA,EAAA,kBACA,OAAA,MAAA,OAAA,KAAA,WAAA,GACA,KAAA,WACA,MAAA,MAAA,OAAA,SAAA,OAAA,MACA,WAAA,EACA,cAAA,EACA,QAAA,EAAA,kBAAA,EAAA,OAAA,IACA,QAAA,EAAA,kBAAA,EAAA,OAAA,QAGA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,OAEA,OADA,GAAA,QAAA,EAAA,OAAA,OACA,EAAA,iBCxBA,WACA,YAEA,SAAA,OAAA,YACA,QAAA,cAAA,WAEA,QAAA,GAAA,GACA,MAAA,IAAA,EAAA,IAAA,EAAA,EAGA,KAAA,cAAA,SAAA,EAAA,EAAA,GACA,SAAA,IACA,EAAA,aAEA,IAAA,GAAA,OAAA,GAAA,eAAA,OAAA,EAKA,OAJA,UAAA,IACA,GAAA,KAGA,GAGA,KAAA,kBAAA,SAAA,EAAA,GACA,GAAA,GAAA,SAAA,QAAA,SAAA,QACA,OAAA,QAAA,EAAA,GAAA,EAAA,IAAA,qBACA,OAAA,sBAAA,IAGA,KAAA,eAAA,SAAA,GACA,GAAA,EAMA,OALA,UAAA,EAAA,MAAA,OAGA,EAAA,EAAA,MAAA,UAEA,OAAA,GAAA,0BAGA,KAAA,aAAA,SAAA,GACA,GAAA,EAMA,OAJA,GADA,SAAA,EAAA,IAAA,KACA,EAAA,IAAA,KAEA,EAAA,IAAA,SAEA,OAAA,GAAA,+BC7CA,WACA,YACA,SAAA,OAAA,YACA,QAAA,gBAAA,cACA,SAAA,GAeA,QAAA,GAAA,GACA,OACA,UAAA,EAAA,OAAA,OACA,MAAA,EAAA,QACA,IAAA,EAAA,QACA,QAAA,GAIA,QAAA,GAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAOA,OANA,SAAA,QAAA,EAAA,SAAA,GACA,GAAA,GAAA,EAAA,eAAA,EACA,GAAA,OAAA,EAAA,SACA,EAAA,EAAA,MAGA,EAGA,QAAA,GAAA,GACA,GAAA,GAAA,EAAA,eAAA,GACA,EAAA,EAAA,aAAA,EACA,QACA,UAAA,EAAA,OAAA,OACA,MAAA,EACA,IAAA,EACA,OAAA,EAAA,OAAA,IAxCA,KAAA,oBAAA,SAAA,EAAA,EAAA,EAAA,GAIA,IAHA,GAAA,GAAA,EAAA,KAAA,EAAA,QACA,EAAA,EAAA,QACA,KACA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EAAA,EACA,GAAA,KAAA,GACA,EAAA,IAAA,EAAA,UACA,EAEA,MAAA,UChBA,WACA,YACA,SAAA,OAAA,YACA,QAAA,kBACA,WACA,GAAA,GAAA,IAEA,MAAA,gBAAA,SAAA,GACA,GAAA,KAIA,OAHA,SAAA,QAAA,EAAA,SAAA,GACA,EAAA,KAAA,EAAA,eAAA,MAEA,GAGA,KAAA,eAAA,SAAA,GACA,OACA,KAAA,EAAA,WACA,WAAA,EAAA,QAAA,WACA,QAAA,EAAA,QAAA,QACA,MAAA,EAAA,QAAA,MACA,IAAA,EAAA,QAAA,IACA,QAAA,EAAA,QAAA,QACA,aAAA,EAAA,QAAA,aACA,QAAA,MAAA,EAAA,QAAA,QACA,iBAAA,MAAA,EAAA,QAAA,iBACA,SAAA,EAAA,QAAA,SACA","file":"hours-b2ec476a.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('hoursApp', [])\n    .constant('PLUGIN_ROOT', '/wp-content/plugins/bsu_hours/')\n    .filter('dayOfWeek', function () {\n      return function (input) {\n        if (!input) return;\n        if (moment().isSame(input.start, 'day')) {\n          return 'Today';\n        }\n        return input.dayOfWeek;\n      };\n    })\n    .filter('openHours', function () {\n      return function (input) {\n        if (!input || !moment.isMoment(input.start) || input.closed) return;\n        return input.start.format('h:mma') + ' -';\n      };\n    })\n    .filter('closeHours', function () {\n      return function (input) {\n        if (!input || !moment.isMoment(input.end)) return;\n        if (input.closed) return 'Closed';\n        return input.end.format('h:mma');\n      };\n    });\n\n}());","(function(){\n  'use strict';\n\n  angular.module('hoursApp')\n    .controller('MainCtrl', ['$scope', '$timeout', 'locationService', 'apiService',\n      function($scope, $timeout, locationService, apiService){\n        var data;\n        $scope.locations = [];\n\n        $scope.init = function(d){\n          data = angular.fromJson(d);\n          $scope.settings = data.settings;\n          if(data.title !== undefined){\n            $scope.title = data.title;\n          }\n          loadApp();\n        };\n\n        function loadApp() {\n          $timeout(function(){\n            if(gapi === undefined || gapi.client === undefined || gapi.client.setApiKey === undefined){\n              loadApp();\n            } else {\n              apiService.init(data.settings.apiKey);\n              $scope.locations = locationService.formatLocations(data.locations);\n            }\n          }, 5);\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('hoursApp')\n    .directive('allPage', ['PLUGIN_ROOT',\n      function(PLUGIN_ROOT){\n        return {\n          restrict: 'E',\n          templateUrl: PLUGIN_ROOT + 'templates/app/allHours.html'\n        };\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('hoursApp')\n    .directive('frontPage', ['PLUGIN_ROOT',\n      function(PLUGIN_ROOT){\n        return {\n          restrict: 'E',\n          templateUrl: PLUGIN_ROOT + 'templates/app/frontPage.html'\n        };\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('hoursApp')\n    .directive('loading', function(){\n      return {\n        restrict: 'E',\n        template: [\n          '<div ng-show=\"loading\" class=\"bsuSpinner\">',\n            '<div class=\"bounce1\"></div>',\n            '<div class=\"bounce2\"></div>',\n            '<div class=\"bounce3\"></div>',\n          '</div>'\n        ].join(''),\n        scope: {\n          loading: '='\n        }\n      };\n    });\n}());","(function(){\n  'use strict';\n  angular.module('hoursApp')\n    .directive('locationPage', ['PLUGIN_ROOT',\n      function(PLUGIN_ROOT){\n        return {\n          restrict: 'E',\n          templateUrl: PLUGIN_ROOT + 'templates/app/individualHours.html',\n          link: function(scope){\n            scope.loading = true;\n\n            scope.$watch('locations', function(locations){\n              if(!locations) return;\n              scope.location = locations.shift();\n            });\n          }\n        };\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('hoursApp')\n    .directive('todayHours', ['apiService', 'hoursService', 'PLUGIN_ROOT',\n      function(apiService, hoursService, PLUGIN_ROOT){\n        return {\n          restrict: 'E',\n          scope: {\n            location: '='\n          },\n          templateUrl: PLUGIN_ROOT + 'templates/app/todayHours.html',\n          link: function(scope){\n            scope.loading = true;\n            scope.$watch('location', function(location){\n              if(!location) return;\n              var start = moment().startOf('day');\n              var end = moment().startOf('day').add(1, 'day');\n              apiService.getHoursForLocation(location.calendarId, start, end)\n                .then(function(hours){\n                  scope.hours = hoursService.formatAllForDisplay(location, hours, start, end).shift();\n                  scope.loading = false;\n                  scope.$apply();\n                });\n            });\n          }\n        };\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('hoursApp')\n    .directive('weekHours', ['apiService', 'hoursService', 'PLUGIN_ROOT',\n      function(apiService, hoursService, PLUGIN_ROOT){\n        return {\n          restrict: 'E',\n          scope: {\n            location: '='\n          },\n          templateUrl: PLUGIN_ROOT + 'templates/app/weekHours.html',\n          link: function(scope){\n            scope.loading = true;\n            scope.$watch('location', function(location){\n              if(location === undefined) return;\n              var start = moment().startOf('day');\n              var end = moment().startOf('day').add(1, 'week');\n              apiService.getHoursForLocation(location.calendarId, start, end)\n                .then(function(hours){\n                  scope.location.hours = hoursService.formatAllForDisplay(location, hours, start, end);\n                  scope.loading = false;\n                  scope.$apply();\n                });\n            });\n          }\n        };\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('hoursApp')\n    .service('apiService', ['$rootScope', '$q', 'dateService',\n      function ($rootScope, $q, dateService) {\n        this.init = function(apiKey){\n          gapi.client.setApiKey(apiKey);\n        };\n\n        this.getHoursForLocation = function(calendarId, start, end){\n          var version = 'v3';\n          var dateFormat = 'MM/DD/YYYY h:mma';\n          return gapi.client.load('calendar', version)\n            .then(function(){\n              return gapi.client.calendar.events.list({\n                calendarId: calendarId,\n                singleEvents:true,\n                timeMin: dateService.getDateTimeString(start.format(dateFormat)),\n                timeMax: dateService.getDateTimeString(end.format(dateFormat))\n              });\n            })\n            .then(function(response){\n              var defer = $q.defer();\n              defer.resolve(response.result.items);\n              return defer.promise;\n            });\n        };\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('hoursApp')\n    .service('dateService', function () {\n\n      function pad(n) {\n        return n < 10 ? '0' + n : n;\n      }\n\n      this.getDateString = function (date, format, timezone) {\n        if (format === undefined) {\n          format = 'YYYY-MM-DD';\n        }\n        var dateString = moment(date, ['MM/DD/YYYY']).format(format);\n        if (timezone !== undefined) {\n          dateString += 'Z';\n        }\n\n        return dateString;\n      };\n\n      this.getDateTimeString = function (date, time) {\n        var timezone = moment().isDST() ? '-06:00' : '-07:00';\n        return moment(pad(date) + pad(time), ['MM/DD/YYYY h:mma'])\n          .format('YYYY-MM-DDTHH:mm:ss' + timezone);\n      };\n\n      this.getStartMoment = function(event){\n        var start;\n        if(event.start.date !== undefined){\n          //start = event.start.date;\n        } else {\n          start = event.start.dateTime;\n        }\n        return moment(start, ['YYYY-MM-DDTHH:mm:ssZ']);\n      };\n\n      this.getEndMoment = function(event){\n        var end;\n        if(event.end.date !== undefined){\n          end = event.end.date;\n        } else {\n          end = event.end.dateTime;\n        }\n        return moment(end, ['YYYY-MM-DDTHH:mm:ssZ']);\n      };\n\n    });\n}());","(function(){\n  'use strict';\n  angular.module('hoursApp')\n    .service('hoursService', ['dateService',\n      function(dateService) {\n\n        this.formatAllForDisplay = function(location, hours, start, end){\n          var length = end.diff(start, 'days');\n          var day = start.clone();\n          var newHours = [];\n          while(length > 0){\n            var formatted = getHours(hours, day);\n            newHours.push(formatted);\n            day.add(1, 'days');\n            --length;\n          }\n          return newHours;\n        };\n\n        function emptyFormatted(day) {\n          return {\n            dayOfWeek: day.format('ddd'),\n            start: day.clone(),\n            end: day.clone(),\n            closed: true\n          };\n        }\n\n        function getHours(hours, day) {\n          var formatted = emptyFormatted(day);\n          angular.forEach(hours, function(hour){\n            var hourStart = dateService.getStartMoment(hour);\n            if(hourStart.isSame(day, 'day')){\n              formatted = getFormatted(hour);\n            }\n          });\n          return formatted;\n        }\n\n        function getFormatted(hour) {\n          var start = dateService.getStartMoment(hour);\n          var end = dateService.getEndMoment(hour);\n          return {\n            dayOfWeek: start.format('ddd'),\n            start: start,\n            end: end,\n            closed: start.isSame(end)\n          };\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('hoursApp')\n    .service('locationService',\n      function () {\n        var self = this;\n\n        this.formatLocations = function(locations){\n          var formatted = [];\n          angular.forEach(locations, function(location){\n            formatted.push(self.formatLocation(location));\n          });\n          return formatted;\n        };\n\n        this.formatLocation = function(l){\n          return {\n            name: l.post_title,\n            calendarId: l.details.calendarId,\n            address: l.details.address,\n            phone: l.details.phone,\n            fax: l.details.fax,\n            imgPath: l.details.imgPath,\n            fullSchedule: l.details.fullSchedule,\n            showMap: l.details.showMap == 'on',\n            showReservations: l.details.showReservations == 'on',\n            priority: l.details.priority,\n            hours: []\n          };\n        };\n\n      });\n}());"],"sourceRoot":"/source/"}